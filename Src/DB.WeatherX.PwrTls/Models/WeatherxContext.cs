// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DB.WeatherX.PwrTls.Models
{
    public partial class WeatherxContext : DbContext
    {
        public WeatherxContext(DbContextOptions<WeatherxContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ForeVsReal> ForeVsReal { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ForeVsReal>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.CreatedAt)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DevDbgDate)
                    .HasColumnType("date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DevDbgDtTm2).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DevDbgDtoffset)
                    .HasColumnName("DevDbgDTOffset")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ForeSiteId)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.ForecastedAt).HasColumnType("datetime");

                entity.Property(e => e.ForecastedFor).HasColumnType("datetime");

                entity.Property(e => e.Id).ValueGeneratedOnAdd();

                entity.Property(e => e.Note).HasColumnType("ntext");

                entity.Property(e => e.RealSiteId)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsFixedLength();

                entity.Property(e => e.UpdatedAt).HasColumnType("datetime");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}